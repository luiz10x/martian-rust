(function() {var implementors = {};
implementors["bstr"] = [{"text":"impl Serialize for BStr","synthetic":false,"types":[]},{"text":"impl Serialize for BString","synthetic":false,"types":[]}];
implementors["cargo_martian"] = [{"text":"impl Serialize for Metadata","synthetic":false,"types":[]},{"text":"impl Serialize for Package","synthetic":false,"types":[]},{"text":"impl Serialize for Target","synthetic":false,"types":[]},{"text":"impl Serialize for Kind","synthetic":false,"types":[]}];
implementors["martian"] = [{"text":"impl Serialize for JobInfo","synthetic":false,"types":[]},{"text":"impl Serialize for Version","synthetic":false,"types":[]},{"text":"impl Serialize for MartianVoid","synthetic":false,"types":[]},{"text":"impl Serialize for Resource","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Serialize for StageDef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Serialize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for StructDef","synthetic":false,"types":[]},{"text":"impl Serialize for MartianPrimaryType","synthetic":false,"types":[]},{"text":"impl Serialize for MartianBlanketType","synthetic":false,"types":[]},{"text":"impl Serialize for MroField","synthetic":false,"types":[]},{"text":"impl Serialize for Volatile","synthetic":false,"types":[]},{"text":"impl Serialize for MroUsing","synthetic":false,"types":[]}];
implementors["martian_filetypes"] = [{"text":"impl Serialize for Bincode","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Serialize for BinaryFormat&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: MartianFileType,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Serialize for Gzip&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: MartianFileType,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Json","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Serialize for JsonFormat&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: MartianFileType,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F&gt; Serialize for Lz4&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: MartianFileType,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F, D&gt; Serialize for DelimitedFormat&lt;F, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: MartianFileType,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: TableConfig + Debug,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Serialize for Csv","synthetic":false,"types":[]},{"text":"impl Serialize for Tsv","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Serialize for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Serialize for Value","synthetic":false,"types":[]},{"text":"impl Serialize for Number","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()